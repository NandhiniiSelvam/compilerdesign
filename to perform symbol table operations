#include <stdio.h>
#include <string.h>

#define SIZE 100

struct Symbol {
    char name[20];
    char type[20];
};

struct Symbol table[SIZE];
int count = 0;

// Insert a new symbol
void insert() {
    char name[20], type[20];
    printf("Enter symbol name: ");
    scanf("%s", name);
    printf("Enter symbol type: ");
    scanf("%s", type);

    // Check if already exists
    for (int i = 0; i < count; i++) {
        if (strcmp(table[i].name, name) == 0) {
            printf("Symbol already exists!\n");
            return;
        }
    }

    strcpy(table[count].name, name);
    strcpy(table[count].type, type);
    count++;
    printf("Symbol inserted successfully.\n");
}

// Search for a symbol
void search() {
    char name[20];
    printf("Enter symbol to search: ");
    scanf("%s", name);

    for (int i = 0; i < count; i++) {
        if (strcmp(table[i].name, name) == 0) {
            printf("Symbol found: Name = %s, Type = %s\n", table[i].name, table[i].type);
            return;
        }
    }
    printf("Symbol not found.\n");
}

// Display all symbols
void display() {
    printf("\nSymbol Table:\n");
    printf("Name\tType\n");
    for (int i = 0; i < count; i++) {
        printf("%s\t%s\n", table[i].name, table[i].type);
    }
}

int main() {
    int choice;
    while (1) {
        printf("\nSymbol Table Operations:\n");
        printf("1. Insert\n2. Search\n3. Display\n4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1: insert(); break;
            case 2: search(); break;
            case 3: display(); break;
            case 4: return 0;
            default: printf("Invalid choice!\n");
        }
    }
}
